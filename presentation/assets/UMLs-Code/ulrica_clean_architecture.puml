@startuml ULRICA Clean Architecture

' Styling
skinparam backgroundColor white
skinparam class {
    BackgroundColor LightBlue
    ArrowColor Black
    BorderColor Black
}

' Packages
package "Domain Layer" {
    class CarProfile {
        + getId(): String
        + getName(): String
        + getBatteryProfile(): BatteryProfile
        + getConsumptionProfile(): ConsumptionProfile
    }
    class BatteryProfile {
        + getCapacityKwh(): double
        + getType(): BatteryType
    }
    class ConsumptionProfile {
        + getBaseConsumptionKwhPer100Km(): double
    }
}

package "Application Layer" {
    interface "CarProfilePersistencePortInterface" {
        + findById(String): Optional<CarProfile>
        + save(CarProfile): CarProfile
    }
    class "CreateCarProfileInteractor" {
        + execute(CreateCarProfileCommand): CarProfile
    }
}

package "Infrastructure Layer" {
    class "JsonCarProfileRepository" {
        + findById(String): Optional<CarProfile>
        + save(CarProfile): CarProfile
    }
}

package "Presentation Layer" {
    class "CarProfileController" {
        + createCarProfile(CreateCarProfileRequest): CarProfileResponse
    }
    class "CarProfileView" {
        + showCarProfile(CarProfile): void
    }
}

' Dependencies
JsonCarProfileRepository ..|> CarProfilePersistencePortInterface
CreateCarProfileInteractor --> CarProfilePersistencePortInterface
CreateCarProfileInteractor --> CarProfile
CarProfileController --> CreateCarProfileInteractor
CarProfileView --> CarProfile

note right of CarProfile
  Domain Entity - Contains business rules
  and core business logic
end note

note right of CarProfilePersistencePortInterface
  Application Port - Defines interface
  for persistence operations
end note

note right of JsonCarProfileRepository
  Infrastructure Adapter - Implements
  persistence port using JSON
end note

note right of CarProfileController
  Presentation Controller - Handles
  user input and coordinates use cases
end note

@enduml 